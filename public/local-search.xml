<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>渗透工具---BurpSuite 插件开发之HelloWorld</title>
    <link href="/burpsuitehw/"/>
    <url>/burpsuitehw/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>这篇文章主要记录如何利用burp官方的新版API即MontoyaApi 写helloworld</p><span id="more"></span><h3 id="具体开发步骤"><a href="#具体开发步骤" class="headerlink" title="具体开发步骤"></a>具体开发步骤</h3><ol><li><p>使用IDEA 新建一个maven项目，采用JDK17.其中我的项目名为 BurpPlugin， GroupId 设置为burp(供参考，可以自定义)</p></li><li><p>在项目的pom.xml文件添加依赖，并刷新maven，依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.portswigger.burp.extensions<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>montoya-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2023.10.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>新建HelloWorld文件，将下面代码粘贴进去</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> burp;<br><br><span class="hljs-keyword">import</span> burp.api.montoya.BurpExtension;<br><span class="hljs-keyword">import</span> burp.api.montoya.MontoyaApi;<br><span class="hljs-keyword">import</span> burp.api.montoya.logging.Logging;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> <span class="hljs-keyword"><span class="hljs-keyword">implements</span> <span class="hljs-type">BurpExtension</span></span> </span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> void initialize(MontoyaApi api) &#123;<br>        <span class="hljs-comment">// 设置插件名称</span><br>        api.extension().setName(<span class="hljs-string">&quot;Hello world extension&quot;</span>);<br>        <span class="hljs-comment">// 初始化日志</span><br>        Logging logging = api.logging();<br><br>        <span class="hljs-comment">// 在burp output界面输出 &quot;This is output.&quot;</span><br>        logging.logToOutput(<span class="hljs-string">&quot;This is output.&quot;</span>);<br><br>        <span class="hljs-comment">// 在burp error界面输出 &quot;This is error.&quot;</span><br>        logging.logToError(<span class="hljs-string">&quot;This is error.&quot;</span>);<br><br>        <span class="hljs-comment">// 在Burp alerts tab 写一些文案</span><br>        logging.raiseInfoEvent(<span class="hljs-string">&quot;Hello info event.&quot;</span>);<br>        logging.raiseDebugEvent(<span class="hljs-string">&quot;Hello debug event.&quot;</span>);<br>        logging.raiseErrorEvent(<span class="hljs-string">&quot;Hello error event.&quot;</span>);<br>        logging.raiseCriticalEvent(<span class="hljs-string">&quot;Hello critical event.&quot;</span>);<br><br>        <span class="hljs-comment">// 在burp error界面输出一个异常文案 &quot;Hello exception.&quot;</span><br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-type">RuntimeException</span>(<span class="hljs-string">&quot;Hello exception.&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>使用maven打jar包，然后将打出的jar加载到burp中就可以看到 代码中输出的log信息了</p></li></ol><h3 id="上述步骤-3-中需要注意的三点如下："><a href="#上述步骤-3-中需要注意的三点如下：" class="headerlink" title="上述步骤 3 中需要注意的三点如下："></a>上述步骤 3 中需要注意的三点如下：</h3><ol><li>必须实现api中的BurpExtension</li><li>必须实现initialize方法(这个方法相当于和burp交互的主要入口)</li><li>本文主要在initialize方法里面写了几行代码</li></ol><h3 id="文章初次发表于"><a href="#文章初次发表于" class="headerlink" title="文章初次发表于"></a>文章初次发表于</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MDgxNjgyMg==&mid=2247484230&idx=1&sn=4053d83ed98fc5f3c43e7c51a180ae7e&chksm=fb9b9e1fccec17094552022f8e8ca29eaa47b88a9546906e4d52f61bac48c6bb5c76543d302d&token=84371561&lang=zh_CN#rd">点击这里跳转查看更详细内容</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>插件开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fiddler Inspectors AES解密插件开发</title>
    <link href="/fiddlerins/"/>
    <url>/fiddlerins/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文主要记录 从0开始 使用C#开发fiddler的解密插件的具体操作。</p><span id="more"></span><h3 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h3><p>业务接口中部分接口数据采取了AES加密，使用fiddler抓包看不到相关的详细字段，不方便分析定位问题，fiddler官方提供了相关接口可以根据实际场景开发自己想要的插件，使用fiddler开发插件的思路大致如本文，插件不一定通用 但是思路是差不多的。</p><h3 id="具体开发步骤"><a href="#具体开发步骤" class="headerlink" title="具体开发步骤"></a>具体开发步骤</h3><p>一. fiddler插件使用C#语言开发，先安装visual studio，不需要太高级的功能，所以在官网直接下了个社区最新版，安装时选择.NET桌面开发</p><p>二. 安装好 创建项目 选择类库(.NET Framework),然后点击下一步 进项目</p><p>三. 在AssemblyInfo.cs文件中添加fiddler版本号</p><p>四. 上一步中如果有报错，添加fiddler引用 来解决，右键引用&#x3D;&gt;添加引用&#x3D;&gt;点击浏览找到fiddler安装路径，选择fiddler.exe添加 并添加standard.dll</p><p>五. 新增:DecryptionUtil.cs、RequestDecryption.cs、RequestDecryptionFormat.cs、ResponseDecryption.cs、ResponseDecryptionFormat.cs 这5个类，代码复制粘贴</p><ol><li><p>DecryptionUtil.cs，这个类 处理 解密逻辑，根据项目处理为自己的逻辑即可</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Fiddler;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Diagnostics;<br><span class="hljs-keyword">using</span> System.Security.Cryptography;<br><span class="hljs-keyword">using</span> System.Text;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Util</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">DecryptionUtil</span><br>    &#123;   <br>         <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">DecryptSDKBody</span>(<span class="hljs-params">String bodyContent</span>)</span><br>        &#123;<br>            JObject encryptionData = JObject.Parse(bodyContent);<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;获取到的请求数据------&quot;</span>);<br>            FiddlerApplication.Log.LogString(encryptionData.ToString());<br>            <span class="hljs-keyword">var</span> key = <span class="hljs-string">&quot;&quot;</span>; <br>            <span class="hljs-keyword">var</span> iv = <span class="hljs-string">&quot;&quot;</span>;<br>            JObject decryptionData = <span class="hljs-keyword">new</span> JObject();<br>            <span class="hljs-comment">//遍历请求体中键值对</span><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> encryptionData.Properties())<br>            &#123;<br>             <br>                <span class="hljs-keyword">if</span> (做一些自己需要的逻辑判断)<br>                &#123;<br>                    decryptionData[property.Name] = property.Value.ToString();<br><br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;获取到的值------&quot;</span>);<br>                    FiddlerApplication.Log.LogString(property.Value.ToString());<br>                    <span class="hljs-comment">//对值进行解密</span><br>                    <span class="hljs-built_in">string</span> decryptedValue = AESDecryption(property.Value.ToString(), key, iv);<br>                    decryptionData[property.Name] = decryptedValue; <span class="hljs-comment">// 将解密后的值赋给 cc 对象&#125;</span><br>                &#125;<br>                <span class="hljs-comment">//myControl.setText(decryptionData.ToString());</span><br>            &#125;<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;解密后的数据------&quot;</span>);<br>            FiddlerApplication.Log.LogString(decryptionData.ToString());<br><br>            <span class="hljs-keyword">return</span> decryptionData.ToString();<br>        &#125;<br><br>        <span class="hljs-comment">// AES解密</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">AESDecryption</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> text, <span class="hljs-built_in">string</span> key, <span class="hljs-built_in">string</span> iv</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;解密算法中text&quot;</span>);<br>                FiddlerApplication.Log.LogString(text);<br>                FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;解密算法中AesKey&quot;</span>);<br>                FiddlerApplication.Log.LogString(key);<br>                <span class="hljs-built_in">byte</span>[] byteKEY = Encoding.UTF8.GetBytes(key);<br>                <span class="hljs-built_in">byte</span>[] byteIV = Encoding.UTF8.GetBytes(iv);<br>                <span class="hljs-built_in">byte</span>[] byteDecrypt = System.Convert.FromBase64String(text);<br><br>                <span class="hljs-keyword">var</span> _aes = <span class="hljs-keyword">new</span> RijndaelManaged<br>                &#123;<br>                    Key = byteKEY,<br>                    iv = byteIV,<br>                    Mode = 项目加密Mode,<br>                    Padding = 项目的Padding <br>                    <br>                &#125;;<br><br>                <span class="hljs-keyword">var</span> _crypto = _aes.CreateDecryptor();<br>                <span class="hljs-built_in">byte</span>[] decrypted = _crypto.TransformFinalBlock(byteDecrypt, <span class="hljs-number">0</span>, byteDecrypt.Length);<br><br>                _crypto.Dispose();<br>                <span class="hljs-keyword">return</span> Encoding.UTF8.GetString(decrypted);<br><br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception ex)<br>            &#123;<br>                <span class="hljs-comment">// Console.WriteLine(ex.ToString());</span><br>                FiddlerApplication.Log.LogString(ex.ToString());<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>RequestDecryption.cs这个类是解密请求数据，text格式</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Fiddler;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> Standard;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><span class="hljs-keyword">using</span> Util;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Request</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RequestDecryption</span> : <span class="hljs-title">Inspector2</span>, <span class="hljs-title">IRequestInspector2</span>, <span class="hljs-title">IBaseInspector2</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBDirty;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBReadOnly;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] mBody;<br>        <span class="hljs-keyword">private</span> HTTPRequestHeaders mRequestHeaders;<br>        <span class="hljs-keyword">private</span> RequestTextViewer mRequestTextViewer;<br><br>       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">RequestDecryption</span>()</span><br>        &#123;<br>            mRequestTextViewer = <span class="hljs-keyword">new</span> RequestTextViewer();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bDirty<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBDirty;            <br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] body<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBody;        <br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBody = <span class="hljs-keyword">value</span>;<br>                <span class="hljs-built_in">byte</span>[] decodedBody = DoDecryption();<br>                <span class="hljs-keyword">if</span> (decodedBody != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    mRequestTextViewer.body = decodedBody;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    mRequestTextViewer.body = <span class="hljs-keyword">value</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br><br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">DoDecryption</span>()</span><br>        &#123;<br>            <span class="hljs-comment">// 将 byte[] 转成字符串</span><br>            String rawBody = System.Text.Encoding.Default.GetString(mBody);<br>            String showBody = rawBody;<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;rawBody: &quot;</span> + rawBody);<br>            showBody = DecryptionUtil.DecryptSDKBody(rawBody);<br>            <span class="hljs-keyword">if</span> (showBody != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">byte</span>[] decodeBody = System.Text.Encoding.UTF8.GetBytes(showBody);<br>                <span class="hljs-keyword">return</span> decodeBody;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                Clear();<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bReadOnly<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBReadOnly;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBReadOnly = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> HTTPRequestHeaders headers<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;headers get function.&quot;</span>);<br>                <span class="hljs-keyword">return</span> mRequestHeaders;<br>            &#125;  <br>            <span class="hljs-keyword">set</span><br>             &#123;<br>                mRequestHeaders = <span class="hljs-keyword">value</span>;           <br><br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddToTab</span>(<span class="hljs-params">TabPage o</span>)</span><br>        &#123;<br>            mRequestTextViewer.AddToTab(o);<br>            o.Text = <span class="hljs-string">&quot;Decryption&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>()</span><br>        &#123;<br>            mBody = <span class="hljs-literal">null</span>;<br>            mRequestTextViewer.Clear();<br>        &#125;<br><br>        <span class="hljs-comment">// 在 Tab 上的摆放位置</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetOrder</span>()</span> =&gt; <span class="hljs-number">100</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>RequestDecryptionFormat.cs这个类是解密请求数据，json格式</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Fiddler;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><span class="hljs-keyword">using</span> Standard;<br><span class="hljs-keyword">using</span> Util;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Request</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RequestDecryptionFormat</span> : <span class="hljs-title">Inspector2</span>, <span class="hljs-title">IRequestInspector2</span>, <span class="hljs-title">IBaseInspector2</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBDirty;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBReadOnly;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] mBody;<br>        <span class="hljs-keyword">private</span> HTTPRequestHeaders mRequestHeaders;<br>        <span class="hljs-keyword">private</span> JSONRequestViewer mJsonRequestViewer;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">RequestDecryptionFormat</span>()</span><br>        &#123;<br>            mJsonRequestViewer = <span class="hljs-keyword">new</span> JSONRequestViewer();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bDirty<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBDirty;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] body<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mJsonRequestViewer.body;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBody = <span class="hljs-keyword">value</span>;<br>                <span class="hljs-built_in">byte</span>[] decodedBody = DoDecryption();<br>                <span class="hljs-keyword">if</span> (decodedBody != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    mJsonRequestViewer.body = decodedBody;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    mJsonRequestViewer.body = <span class="hljs-keyword">value</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">DoDecryption</span>()</span><br>        &#123;<br>            <span class="hljs-comment">// 将 byte[] 转成字符串</span><br>            String rawBoday = System.Text.Encoding.Default.GetString(mBody);<br>            String showBody = rawBoday;<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;rawBoday: &quot;</span> + rawBoday);<br>            showBody = DecryptionUtil.DecryptSDKBody(rawBoday);<br>            <span class="hljs-keyword">if</span> (showBody != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">byte</span>[] decodeBody = System.Text.Encoding.UTF8.GetBytes(showBody);<br>                <span class="hljs-keyword">return</span> decodeBody;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                Clear();<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bReadOnly<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBReadOnly;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBReadOnly = <span class="hljs-keyword">value</span>;<br>                mJsonRequestViewer.bReadOnly = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> HTTPRequestHeaders headers<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mRequestHeaders;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br><br>                mRequestHeaders = <span class="hljs-keyword">value</span>;<br>                mJsonRequestViewer.headers = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddToTab</span>(<span class="hljs-params">TabPage o</span>)</span><br>        &#123;<br>            mJsonRequestViewer.AddToTab(o);<br>            o.Text = <span class="hljs-string">&quot;DecryptionJSON&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>()</span><br>        &#123;<br>            mBody = <span class="hljs-literal">null</span>;<br>            mJsonRequestViewer.Clear();<br>        &#125;<br><br>        <span class="hljs-comment">// 在 Tab 上的摆放位置</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetOrder</span>()</span> =&gt; <span class="hljs-number">100</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>ResponseDecryption.cs这个类是解密响应数据，text格式</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Fiddler;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> Standard;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><span class="hljs-keyword">using</span> Util;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Response</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">sealed</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDecryption</span> : <span class="hljs-title">Inspector2</span>, <span class="hljs-title">IResponseInspector2</span>, <span class="hljs-title">IBaseInspector2</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBDirty;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBReadOnly;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] mBody;<br>        <span class="hljs-keyword">private</span> HTTPResponseHeaders mResponseHeaders;<br>        <span class="hljs-keyword">private</span> ResponseTextViewer mResponseTextViewer;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ResponseDecryption</span>()</span><br>        &#123;<br>            mResponseTextViewer = <span class="hljs-keyword">new</span> ResponseTextViewer();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bDirty<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBDirty;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] body<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBody;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBody = <span class="hljs-keyword">value</span>;<br>                <span class="hljs-built_in">byte</span>[] decodedBody = DoDecryption();<br>                <span class="hljs-keyword">if</span> (decodedBody != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    mResponseTextViewer.body = decodedBody;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    mResponseTextViewer.body = <span class="hljs-keyword">value</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">DoDecryption</span>()</span><br>        &#123;<br>            <span class="hljs-comment">// 将 byte[] 转成字符串</span><br>            String rawBody = System.Text.Encoding.Default.GetString(mBody);<br>            String showBody = rawBody;<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;rawBody: &quot;</span> + rawBody);<br>            showBody = DecryptionUtil.DecryptSDKBody(rawBody);<br>            <span class="hljs-keyword">if</span> (showBody != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-built_in">byte</span>[] decodeBody = System.Text.Encoding.UTF8.GetBytes(showBody);<br>                <span class="hljs-keyword">return</span> decodeBody;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                Clear();<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bReadOnly<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBReadOnly;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBReadOnly = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        HTTPResponseHeaders IResponseInspector2.headers<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;headers get function.&quot;</span>);<br>                <span class="hljs-keyword">return</span> mResponseHeaders;<br>            &#125;<br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;headers set function.&quot;</span>);<br>                mResponseHeaders = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddToTab</span>(<span class="hljs-params">TabPage o</span>)</span><br>        &#123;<br>            mResponseTextViewer.AddToTab(o);<br>            o.Text = <span class="hljs-string">&quot;Decryption&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>()</span><br>        &#123;<br>            mBody = <span class="hljs-literal">null</span>;<br>            mResponseTextViewer.Clear();<br>        &#125;<br><br>        <span class="hljs-comment">// 在 Tab 上的摆放位置</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetOrder</span>()</span> =&gt; <span class="hljs-number">100</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>ResponseDecryptionFormat.cs这个类是解密响应数据，json格式</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> Fiddler;<br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Windows.Forms;<br><span class="hljs-keyword">using</span> Standard;<br><span class="hljs-keyword">using</span> Util;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Response</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDecryptionFormat</span> : <span class="hljs-title">Inspector2</span>, <span class="hljs-title">IResponseInspector2</span>, <span class="hljs-title">IBaseInspector2</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBDirty;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">bool</span> mBReadOnly;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] mBody;<br>        <span class="hljs-keyword">private</span> HTTPResponseHeaders mResponseHeaders;<br>        <span class="hljs-keyword">private</span> JSONResponseViewer mJsonResponseViewer;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ResponseDecryptionFormat</span>()</span><br>        &#123;<br>            mJsonResponseViewer = <span class="hljs-keyword">new</span> JSONResponseViewer();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bDirty<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBDirty;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] body<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mJsonResponseViewer.body;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBody = <span class="hljs-keyword">value</span>;<br>                <span class="hljs-built_in">byte</span>[] decodedBody = DoDecryption();<br>                <span class="hljs-keyword">if</span> (decodedBody != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    mJsonResponseViewer.body = decodedBody;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    mJsonResponseViewer.body = <span class="hljs-keyword">value</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">DoDecryption</span>()</span><br>        &#123;<br>            <span class="hljs-comment">// 将 byte[] 转成字符串</span><br>            String rawBody = System.Text.Encoding.Default.GetString(mBody);<br>            String showBody = rawBody;<br>            FiddlerApplication.Log.LogString(<span class="hljs-string">&quot;rawBody: &quot;</span> + rawBody);<br>            showBody = DecryptionUtil.DecryptSDKBody(rawBody);<br>            <span class="hljs-keyword">if</span> (showBody != <span class="hljs-literal">null</span>) <br>            &#123; <br>                <span class="hljs-built_in">byte</span>[] decodeBody = System.Text.Encoding.UTF8.GetBytes(showBody);<br>                <span class="hljs-keyword">return</span> decodeBody;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                Clear();<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> bReadOnly<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">return</span> mBReadOnly;<br>            &#125;<br><br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mBReadOnly = <span class="hljs-keyword">value</span>;<br>                mJsonResponseViewer.bReadOnly = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        HTTPResponseHeaders IResponseInspector2.headers<br>        &#123;<br>            <span class="hljs-keyword">get</span> =&gt; mResponseHeaders;<br>            <span class="hljs-keyword">set</span><br>            &#123;<br>                mResponseHeaders = <span class="hljs-keyword">value</span>;<br>                mJsonResponseViewer.headers = <span class="hljs-keyword">value</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddToTab</span>(<span class="hljs-params">TabPage o</span>)</span><br>        &#123;<br>            mJsonResponseViewer.AddToTab(o);<br>            o.Text = <span class="hljs-string">&quot;DecryptionJSON&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>()</span><br>        &#123;<br>            mBody = <span class="hljs-literal">null</span>;<br>            mJsonResponseViewer.Clear();<br>        &#125;<br><br>        <span class="hljs-comment">// 在 Tab 上的摆放位置</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetOrder</span>()</span> =&gt; <span class="hljs-number">100</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p>上述内容就是这个插件的完整开发过程，这里没有放图片，更多详细内容可以参考下面链接</p><h3 id="文章初次发表于"><a href="#文章初次发表于" class="headerlink" title="文章初次发表于"></a>文章初次发表于</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MDgxNjgyMg==&mid=2247484302&idx=1&sn=49b5938b00efa77956b54bef43fdf7be&chksm=fb9b9ed7ccec17c1685f4622eccc067bd2eeb1741881080102c410d8dadb45f68d2f09e817ff&token=1498682306&lang=zh_CN#rd">点击这里跳转查看更详细内容</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>插件开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fiddler Script 脚本实现篡改加密的请求/响应数据</title>
    <link href="/fiddlersc/"/>
    <url>/fiddlersc/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>这篇文章主要记录如何利用Fiddler Script 脚本实现篡改 响应前被加密的数据。</p><span id="more"></span><h3 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h3><p>客户端有个活动需要上线，想要测试活动结束时客户端的一些表现情况。有两种方式：</p><ol><li>服务端改结束时间，重新部署 </li><li>拦截接口 在响应之前将数据改掉 然后返回给客户端</li></ol><p>其中：<br>方案1 比较方便但是会影响所有正在参与该活动的同学，属于利己不利他。<br>方案2 影响面小，但是实现比较复杂，需要自己解密数据– 修改数据–加密数据 再返回。<br>本文采用了方案2</p><h3 id="梳理思路"><a href="#梳理思路" class="headerlink" title="梳理思路"></a>梳理思路</h3><ol><li>响应前拦截目标接口</li><li>先将数据解密 然后拿到目标字段的值进行重新赋值修改</li><li>将修改后的数据进行加密 然后返回给客户端</li></ol><h3 id="具体开发步骤"><a href="#具体开发步骤" class="headerlink" title="具体开发步骤"></a>具体开发步骤</h3><p>下面两个步骤都是直接在Fiddler Script 中编码即可，注意需要将Fiddler Script的语言设置为js(Fiddler Script 有 c# 和 js 两种语言可选)</p><ol><li><p>实现加解密方法，具体代码可参考如下</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">//解密<br>static <span class="hljs-keyword">function</span> AesDecrypt(decryptStr, aesKey,iv) &#123;<br>    var byteKEY = <span class="hljs-keyword">System</span>.Text.<span class="hljs-keyword">Encoding</span>.UTF8.GetBytes(aesKey);<br>    var byteIv = &quot;同上&quot;;<br>    var byteDecrypt = <span class="hljs-keyword">System</span>.Convert.FromBase64String(decryptStr);<br>  <br>    var _aes = <span class="hljs-built_in">new</span> RijndaelManaged();<br>    _aes.Key = byteKEY;<br>    _aes.iv= byteIv ;<br>    _aes.Mode = 项目的Mode;<br>    _aes.Padding = 项目的PaddingMode;<br>           <br>    var _crypto = _aes.CreateDecryptor();<br>    var decrypted = _crypto.TransformFinalBlock(<br>        byteDecrypt, <span class="hljs-number">0</span>, byteDecrypt.Length);<br><br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">System</span>.Text.<span class="hljs-keyword">Encoding</span>.UTF8.GetString(decrypted);<br>&#125;<br> //加密  <br>static <span class="hljs-keyword">function</span> AesEncrypt(byteEncrypt, aesKey，iv) &#123;<br>    var byteKEY = <span class="hljs-keyword">System</span>.Text.<span class="hljs-keyword">Encoding</span>.UTF8.GetBytes(aesKey);<br>    var byteIv = &quot;同上&quot;;<br>    <br>    var _aes = <span class="hljs-built_in">new</span> RijndaelManaged();<br>    _aes.Key = byteKEY;<br>    _aes.iv= byteIv ;<br>    _aes.Mode = 项目的Mode;<br>    _aes.Padding = 项目的PaddingMode;<br>           <br>    var _crypto = _aes.CreateEncryptor();<br>    var <span class="hljs-keyword">encrypted</span> = _crypto.TransformFinalBlock(<br>        byteEncrypt, <span class="hljs-number">0</span>, byteEncrypt.Length);<br>  <br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">System</span>.Convert.ToBase64String(<span class="hljs-keyword">encrypted</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>拦截接口、解密、修改数据、加密、返回数据，具体代码可参考如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> function <span class="hljs-title function_">OnBeforeResponse</span><span class="hljs-params">(oSession: Session)</span> &#123;<br>     <span class="hljs-keyword">if</span> (m_Hide304s &amp;&amp; oSession.responseCode == <span class="hljs-number">304</span>) &#123;<br>         oSession[<span class="hljs-string">&quot;ui-hide&quot;</span>] = <span class="hljs-string">&quot;true&quot;</span>;<br>     &#125;<br>    <br>     <span class="hljs-comment">//这个例子是获取响应body里面的目标字段1解密，然后获取解密内容里面的&#x27;目标字段2&#x27;修改值，然后加密返回</span><br>     <span class="hljs-keyword">if</span>(oSession.fullUrl.Contains(<span class="hljs-string">&quot;目标接口&quot;</span>))&#123;<br>         <span class="hljs-comment">// 获取请求参数</span><br>         <span class="hljs-type">var</span> <span class="hljs-variable">requestStringOriginal</span> <span class="hljs-operator">=</span> oSession.GetRequestBodyAsString();<br>         <span class="hljs-type">var</span> <span class="hljs-variable">requestJSON</span> <span class="hljs-operator">=</span> Fiddler.WebFormats.JSON.JsonDecode(requestStringOriginal);<br>         <span class="hljs-comment">//获取响应参数</span><br>         <span class="hljs-type">var</span> <span class="hljs-variable">responseStringOriginal</span> <span class="hljs-operator">=</span> oSession.GetResponseBodyAsString();<br>         <span class="hljs-type">var</span> <span class="hljs-variable">responseJSON</span> <span class="hljs-operator">=</span> Fiddler.WebFormats.JSON.JsonDecode(responseStringOriginal);<br>         <span class="hljs-type">var</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;项目key&quot;</span>;<br>         <span class="hljs-type">var</span> <span class="hljs-variable">iv</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;项目iv&quot;</span>;<br>         <span class="hljs-keyword">if</span> (responseJSON.JSONObject[<span class="hljs-string">&#x27;目标字段1&#x27;</span>] != <span class="hljs-string">&quot;&quot;</span>) &#123;<br>             <span class="hljs-type">var</span> <span class="hljs-variable">oriDara</span> <span class="hljs-operator">=</span> responseJSON.JSONObject[<span class="hljs-string">&#x27;目标字段1&#x27;</span>]<br>             <span class="hljs-comment">//解密</span><br>             <span class="hljs-type">var</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> AesDecrypt(responseJSON.JSONObject[<span class="hljs-string">&#x27;目标字段1&#x27;</span>], key, iv);<br>             <br>             <span class="hljs-type">var</span> <span class="hljs-variable">jsonData</span> <span class="hljs-operator">=</span> Fiddler.WebFormats.JSON.JsonDecode(data);<br>     <br>             jsonData.JSONObject[<span class="hljs-string">&#x27;目标字段2&#x27;</span>] = <span class="hljs-string">&#x27;目标值&#x27;</span>;<br>             <span class="hljs-type">var</span> <span class="hljs-variable">strData</span> <span class="hljs-operator">=</span>  Fiddler.WebFormats.JSON.JsonEncode(jsonData.JSONObject);<br>             <span class="hljs-comment">// base64加密</span><br>             <span class="hljs-type">var</span> <span class="hljs-variable">inputBytes</span> <span class="hljs-operator">=</span> System.Text.Encoding.UTF8.GetBytes(strData);<br>             <span class="hljs-comment">//var encodedData =System.Convert.ToBase64String(inputBytes);</span><br>             <span class="hljs-comment">// aes加密</span><br>             <span class="hljs-type">var</span> <span class="hljs-variable">aesData</span> <span class="hljs-operator">=</span> AesEncrypt(inputBytes, key, iv);<br>             <br>             responseJSON.JSONObject[<span class="hljs-string">&#x27;目标字段1&#x27;</span>] = aesData<br>             <br>             <span class="hljs-type">var</span> <span class="hljs-variable">mod_json</span> <span class="hljs-operator">=</span> Fiddler.WebFormats.JSON.JsonEncode(responseJSON.JSONObject);<br>             oSession.utilSetResponseBody(mod_json);<br><br>         &#125;<br>     &#125;<br><br> &#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>上述操作其实对于请求body里面的加密内容的修改同样适用，不再赘述。在写代码过程中 不太好调试的话可以将需要的内容写到本地文件 然后查看 也算是一种调试方式。</p><h3 id="文章初次发表于"><a href="#文章初次发表于" class="headerlink" title="文章初次发表于"></a>文章初次发表于</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MDgxNjgyMg==&mid=2247484303&idx=1&sn=8d154fac856ec246559c7fe106c5993e&chksm=fb9b9ed6ccec17c068bdd4afe94e6e6e7f800510b02dd8fc73d832f15163b8fbcc6367886bec&token=1498682306&lang=zh_CN#rd">点击这里跳转查看更详细内容</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>插件开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
